"""empty message

Revision ID: 9440c4a44a52
Revises: 
Create Date: 2024-12-11 16:09:05.740150

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '9440c4a44a52'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('course',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=150), nullable=False),
    sa.Column('password_hash', sa.String(length=256), nullable=True),
    sa.Column('firstname', sa.String(length=120), nullable=False),
    sa.Column('lastname', sa.String(length=120), nullable=False),
    sa.Column('user_type', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_username'), ['username'], unique=True)

    op.create_table('past_enrollment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('professor',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('phone', sa.String(length=15), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('student',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('major', sa.String(length=100), nullable=False),
    sa.Column('gpa', sa.Float(), nullable=True),
    sa.Column('graduation', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('course_section',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('section_num', sa.String(length=10), nullable=False),
    sa.Column('term', sa.String(length=20), nullable=False),
    sa.Column('professor_id', sa.Integer(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
    sa.ForeignKeyConstraint(['professor_id'], ['professor.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('studentCourses',
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['student.id'], ),
    sa.PrimaryKeyConstraint('student_id', 'course_id')
    )
    op.create_table('studentPastEnrollments',
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('past_enrollment_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['past_enrollment_id'], ['past_enrollment.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['student.id'], ),
    sa.PrimaryKeyConstraint('student_id', 'past_enrollment_id')
    )
    op.create_table('sa_position',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('course_section_id', sa.Integer(), nullable=False),
    sa.Column('num_sa_required', sa.Integer(), nullable=False),
    sa.Column('qualifications', sa.String(length=500), nullable=True),
    sa.Column('min_gpa', sa.Float(), nullable=False),
    sa.Column('min_grade', sa.String(length=1), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('num_sas', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['course_section_id'], ['course_section.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['student.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('saCourses',
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('sa_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['course_section.id'], ),
    sa.ForeignKeyConstraint(['sa_id'], ['sa_position.id'], ),
    sa.PrimaryKeyConstraint('course_id', 'sa_id')
    )
    op.create_table('sa_app',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('grade_earned', sa.String(length=1), nullable=False),
    sa.Column('term_taken', sa.String(length=5), nullable=False),
    sa.Column('term_applied', sa.String(length=5), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('course_section_id', sa.Integer(), nullable=False),
    sa.Column('position_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['course_section_id'], ['course_section.id'], ),
    sa.ForeignKeyConstraint(['position_id'], ['sa_position.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['student.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('application_status',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('application_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['application_id'], ['sa_app.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('application_status')
    op.drop_table('sa_app')
    op.drop_table('saCourses')
    op.drop_table('sa_position')
    op.drop_table('studentPastEnrollments')
    op.drop_table('studentCourses')
    op.drop_table('course_section')
    op.drop_table('student')
    op.drop_table('professor')
    op.drop_table('past_enrollment')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_username'))

    op.drop_table('user')
    op.drop_table('course')
    # ### end Alembic commands ###
